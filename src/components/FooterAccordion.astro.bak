---
/**
 * Componente de acordeão para o rodapé
 * 
 * Este componente cria um acordeão expansível para exibir informações
 * adicionais no rodapé, como termos de uso, política de privacidade, etc.
 */
interface Props {
  items: {
    title: string;
    content: string;
  }[];
}

const { items } = Astro.props;
---

<div class="footer-accordion">
  {items.map((item, index) => (
    <div class="accordion-item">
      <button 
        class="accordion-header" 
        aria-expanded="false"
        aria-controls={`accordion-content-${index}`}
      >
        <span>{item.title}</span>
        <svg 
          class="accordion-icon" 
          width="24" 
          height="24" 
          viewBox="0 0 24 24" 
          fill="none" 
          stroke="currentColor" 
          stroke-width="2" 
          stroke-linecap="round" 
          stroke-linejoin="round"
        >
          <polyline points="6 9 12 15 18 9"></polyline>
        </svg>
      </button>
      <div 
        id={`accordion-content-${index}`}
        class="accordion-content"
        hidden
      >
        <div class="accordion-content-inner" set:html={item.content} />
      </div>
    </div>
  ))}
</div>

<style>
  .footer-accordion {
    width: 100%;
    margin: 30px 0;
  }

  .accordion-item {
    border-bottom: 1px solid #eee;
  }

  .accordion-header {
    width: 100%;
    background: none;
    border: none;
    padding: 15px 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    color: #333;
    text-align: left;
  }

  .accordion-icon {
    transition: transform 0.3s ease;
  }

  .accordion-header[aria-expanded="true"] .accordion-icon {
    transform: rotate(180deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .accordion-content-inner {
    padding: 0 0 20px 0;
    color: #666;
  }
</style>

<script>
  // Inicializar os acordeões
  document.addEventListener('DOMContentLoaded', () => {
    const accordionHeaders = document.querySelectorAll('.accordion-header');
    
    accordionHeaders.forEach(header => {
      header.addEventListener('click', () => {
        const isExpanded = header.getAttribute('aria-expanded') === 'true';
        const contentId = header.getAttribute('aria-controls');
        const content = document.getElementById(contentId);
        
        // Alternar o estado expandido
        header.setAttribute('aria-expanded', !isExpanded);
        
        // Mostrar ou ocultar o conteúdo
        if (!isExpanded) {
          content.hidden = false;
          content.style.maxHeight = content.scrollHeight + 'px';
        } else {
          content.style.maxHeight = '0';
          setTimeout(() => {
            content.hidden = true;
          }, 300); // Aguardar a transição terminar
        }
      });
    });
  });
</script> 